
name: dblearning_bundle DEV deployment.
concurrency: '1'


on:
  push:
    branches:
      - dev

jobs:

  # Used by the "pipeline_update" job to deploy the bundle.
  # Bundle validation is automatically performed as part of this deployment.
  # If validation fails, this workflow fails.
  deploy:
    environment: DEV
    name: "Deploy bundle"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Download the Databricks CLI.
      # See https://github.com/databricks/setup-cli
      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main

      # Deploy the bundle to the "dev" target as defined
      # in the bundle's settings file.
      - name: Deploy bundle to dev
        working-directory: .
        run: databricks bundle deploy -t dev
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev
  
  # Validate, deploy, and then run the bundle.
  pipeline_update:
    environment: DEV
    name: "Run pipeline update"
    runs-on: ubuntu-latest

    # Run the "deploy" job first.
    needs:
      - deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Download the Databricks CLI.
      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main

      # Run the Databricks workflow named "dblearning_bundle_job"
      - name: Run dblearning_bundle_job
        working-directory: .
        run: databricks bundle run dblearning_bundle_job --refresh-all
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev
